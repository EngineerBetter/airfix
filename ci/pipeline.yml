---
resources:
- name: concourse-tasks
  type: git
  webhook_token: ((webhook_token))
  source:
    ignore_paths: [version, README.md]
    <<: &git_source
      uri: git@github.com:EngineerBetter/concourse-tasks.git
      private_key: |
        ((github_private_key))
      branch: main
- name: version
  type: semver
  source:
    driver: git
    branch: main
    file: version
    depth: 1
    <<: *git_source
- name: release
  type: github-release
  source:
    owner: EngineerBetter
    repository: concourse-tasks
    access_token: ((github_access_token))

jobs:
- name: set-pipeline
  serial: true
  plan:
  - get: concourse-tasks
    trigger: true
  - set_pipeline: self
    file: concourse-tasks/ci/pipeline.yml

- name: test
  serial: true
  plan:
  - get: concourse-tasks
    passed: [set-pipeline]
    trigger: true
  - task: test
    config:
      <<: &task-config
        platform: linux
        image_resource:
          type: registry-image
          source: { repository: engineerbetter/pcf-ops }
        inputs:
        - name: concourse-tasks
      run:
        path: bash
        args:
        - -xeuc
        - |
          curl -L https://github.com/EngineerBetter/ironbird/releases/download/0.0.10/ironbird-linux -o /usr/local/bin/ironbird
          chmod +x /usr/local/bin/ironbird

          fly login -t this -c ((concourse_url)) -u ((concourse_username)) -p ((concourse_password))
          fly -t this sync

          cd concourse-tasks

          shopt -s globstar
          specs=( **/*_spec.yml )
          shopt -u globstar
          IFS=, eval 'csv="${specs[*]}"'
          ironbird --target this --specs "${csv}"

- name: release
  serial: true
  plan:
  - get: concourse-tasks
    passed: [test]
    trigger: true
  - in_parallel:
    - task: tar
      file: concourse-tasks/tar/task.yml
      params: { EXCLUDE: ci, TARBALL_NAME: concourse-tasks }
      input_mapping: { input: concourse-tasks }
      output_mapping: { output: tar }
    - task: write-name
      file: concourse-tasks/echo-to-file/task.yml
      params: { FILENAME: name, MESSAGE: concourse-tasks }
      output_mapping: { output: namefile }
  - put: version
    params:
      bump: patch
  - put: release
    params:
      globs: [tar/concourse-tasks.tar.gz]
      name: namefile/name
      tag: version/version
