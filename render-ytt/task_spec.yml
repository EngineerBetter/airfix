---
config: task.yml
cases:
- when: invoked without specified ytt templates
  it: # renders all templates to output
    has_inputs:
    - name: templates
      setup: &setup |
        cat > template-1.yml <<EOF
        #@ var1 = "value1"
        key1: #@ var1
        EOF
        cat > template-2.yml <<EOF
        #@ var2 = "value2"
        key2: #@ var2
        EOF
    exits: 0
    has_outputs:
    - name: rendered
      for_which:
      - bash: cat rendered.yml
        <<: &multifile_says
          says:
          - |
            key1: value1
            ---
            key2: value2
- when: invoked with specific ytt templates
  it: # renders specific templates to output
    has_inputs:
    - name: templates
      setup: *setup
    exits: 0
    has_outputs:
    - name: rendered
      for_which:
      - bash: cat rendered.yml
        says:
        - |
          key1: value1
  params:
    TEMPLATES: template-1.yml
- when: given an output filename
  params: {RENDERED_FILENAME: my-file.yaml}
  it: # renders specific templates file with that name
    exits: 0
    has_inputs:
    - name: templates
      setup: *setup
    has_outputs:
    - name: rendered
      for_which:
      - bash: cat my-file.yaml
        <<: *multifile_says
- when: invoked with missing ytt templates
  it: # exits with a non-zero status code
    has_inputs:
    - name: templates
      setup: *setup
    exits: 1
  params:
    TEMPLATES: template-3.yml
- when: source document includes comments
  it: # exits with a non-zero status code
    has_inputs:
    - name: templates
      setup: &comment_setup |
        cat > template-1.yml <<EOF
        #@ var1 = "value1"
        # TODO: make ytt support comments by default
        key1: #@ var1
        EOF
    exits: 1
  params:
    TEMPLATES: template-3.yml
- when: configured to ignore source document comments
  params: {IGNORE_UNKNOWN_COMMENTS: true}
  it: # renders successfully
    has_inputs:
    - name: templates
      setup: *comment_setup
    exits: 0
    has_outputs:
    - name: rendered
      for_which:
      - bash: cat rendered.yml
        says:
        - |
          key1: value1
- when: data values are provided with YTT_ environment variables
  params:
    IGNORE_UNKNOWN_COMMENTS: true
    YTT_DATA_VALUES: '{ "test": "hello_world", "test2": "hi" }'
  it: # renders successfully
    has_inputs:
    - name: templates
      setup: |
        cat > template-1.yml <<EOF
        #@ load("@ytt:data", "data")
        test: #@ data.values.test
        test2: #@ data.values.test2
        EOF
        cat > data.yml <<EOF
        #@data/values
        ---
        test:
        test2:
        EOF
    exits: 0
    has_outputs:
    - name: rendered
      for_which:
      - bash: cat rendered.yml
        says:
        - |
          test: hello_world
          test2: hi
